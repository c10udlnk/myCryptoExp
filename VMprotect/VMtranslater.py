# By c10udlnk(https://github.com/c10udlnk)
# Enjoy it!

# 格式为opcode:[本指令所占字节数,伪代码语句参数个数,伪代码语句]
ins_set={0x00:[1,0,"exit"],
         0x01:[3,2,"mov r{1},r{0}"],
         0x02:[3,2,"mov r{1},dest[r{0}]"],
         0x03:[6,5,"mov r{4},0x{3:0>2X}{2:0>2X}{1:0>2X}{0:0>2X}"],
         0x04:[3,2,"add r{1},r{0}"],
         0x05:[3,2,"sub r{1},r{0}"],
         0x06:[3,2,"mul r{1},r{0}"],
         0x07:[3,2,"div r{1},r{0}"],
         0x08:[3,2,"mod r{1},r{0}"],
         0x09:[2,1,"inc r{0}"],
         0x0A:[3,2,"cmp r{0},r{1}"],
         0x0B:[2,1,"jnz 0x{0:0>8X}"],
         0x0C:[1,0,"tag==1, then get flag"]}
opcode=[0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0xE3, 0x07, 0x00, 0x00, 0x03, 0x03, 0x25, 0x5B, 0x00, 0x00, 0x04, 0x03, 0x91, 0xE5, 0x25, 0x01, 0x05, 0x03, 0x7F, 0x00, 0x00, 0x00, 0x06, 0x03, 0x19, 0x00, 0x00, 0x00, 0x07, 0x02, 0x02, 0x00, 0x09, 0x02, 0x01, 0x03, 0x01, 0x06, 0x04, 0x01, 0x04, 0x05, 0x01, 0x08, 0x06, 0x01, 0x01, 0x01, 0x03, 0x0A, 0x00, 0x01, 0x0B, 0x0A, 0x0A, 0x02, 0x07, 0x0B, 0xDE, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]
pc=0
res=["Addr          Code\n"]
addrfmt="0x{0:0>8X}    "
while pc<len(opcode):
    i=pc
    pc+=ins_set[opcode[i]][0]
    res.append(addrfmt.format(i))
    if opcode[i] not in ins_set.keys(): #如果指令集中不存在该opcode
        print("[-] UknOpcode 0x{0:X} in addr 0x{1:0>8X}.\n".format(opcode[i],i))
        break
    elif opcode[i]==0x00: #以下若干个elif为某些操作码的特殊处理
        res.append(ins_set[opcode[i]][2]+'\n')
        break
    elif opcode[i]==0x0B:
        jmpdelta=opcode[i+1] if opcode[i+1]&0x80==0 else opcode[i+1]-256
        res.append(ins_set[opcode[i]][2].format(i+jmpdelta)+'\n')
    else: #一般opcode的处理
        args=[]
        for j in range(ins_set[opcode[i]][1]):
            args.append(opcode[i+1+j])
        res.append(ins_set[opcode[i]][2].format(*args)+'\n')
        if opcode[i]==0:
            break

with open('res.txt','w') as f:
    f.writelines(res)